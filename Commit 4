using System;
using System.Data.SqlServerCe;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApplication3
{
    //this form is used to allow the users to view the errors that are currently marked as present within the system and provides a link that takes them to a page which allows them to provide a potential solution if they feel they can remedy a problem that is present within it

    public partial class Form3 : Form
    {
        public Form3()
        {
            InitializeComponent();
        }

        private void Form3_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'databaseconnectionDataSet.tblErrors' table. You can move, or remove it, as needed.
            this.tblErrorsTableAdapter.Fill(this.databaseconnectionDataSet.tblErrors);
            dataGridView1.Columns[4].Visible = false;


        }


        private void btnClose_Click_1(object sender, EventArgs e)
        {
            this.Close(); //closes instance of form being open

        }
    }
}




using System;
using System.Configuration;
using System.Data.SqlServerCe;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApplication3
{
    //this form is used to input new errors that are encountered into the table that is responsible for holding the error


    public partial class Form2 : Form
    {
        SqlCeConnection mySqlConnection;

        public Form2()
        {
            InitializeComponent();
        }

        private void Form2_Load(object sender, EventArgs e)
        {

        }


        private void btnClose_Click_1(object sender, EventArgs e)
        {
            this.Close(); //close form

        }

        public void cleartxtBoxes()
        {
            txtName.Text = txtError.Text = txtExpect.Text = txtSolutions.Text = "";
        }

        public void insertRecord(String userName, String Error, String Expected,  String Solutions, String Password, String commandString)
        {
            SqlCeCommand cmdInsert = new SqlCeCommand(commandString, mySqlConnection);

            cmdInsert.Parameters.AddWithValue("@name", userName);
            cmdInsert.Parameters.AddWithValue("@error", Error);
            cmdInsert.Parameters.AddWithValue("@expected", Expected);
            cmdInsert.Parameters.AddWithValue("@solutions", Solutions);
            cmdInsert.Parameters.AddWithValue("@password", Password);
            mySqlConnection.Open();
            cmdInsert.ExecuteNonQuery();
            MessageBox.Show("Upload successful");  //confirms that the adding of the data to the table was successful and if it wasn't then this message wouldn't display
            mySqlConnection.Close();

                    }


        private void btnInsert_Click(object sender, EventArgs e)
        {
            mySqlConnection =
            mySqlConnection = new SqlCeConnection(@"Data Source=C:\Temp\Databaseconnection.sdf");

            String commandString = "INSERT INTO tblErrors(userName, Error, Expected, Solutions, Password) VALUES (@name, @error, @expected, @solutions, @password)";


            insertRecord(txtName.Text, txtError.Text, txtExpect.Text, txtSolutions.Text, txtPassword.Text, commandString);  //inserts the data into the table

            cleartxtBoxes();

        }

        bool txtNameWasFocused = false;
        private void txtName_Focus(object sender, EventArgs e)
        {
            if (!txtNameWasFocused)
            {
                txtNameWasFocused = true;
                txtName.SelectionStart = 0;
                txtName.SelectionLength = txtName.Text.Length;  //makes it so that when you start typing it will highlight the text currently in the text box and then remove it
            }
        }

        bool txtErrorWasFocused = false;
        private void txtError_Focus(object sender, EventArgs e)
        {
            if (!txtErrorWasFocused)
            {
                txtErrorWasFocused = true;
                txtError.SelectionStart = 0;
                txtError.SelectionLength = txtError.Text.Length;  //makes it so that when you start typing it will highlight the text currently in the text box and then remove it
            }
        }

        bool txtExpectWasFocused = false;
        private void txtExpect_Focus(object sender, EventArgs e)
        {
            if (!txtExpectWasFocused)
            {
                txtExpectWasFocused = true;
                txtExpect.SelectionStart = 0;
                txtExpect.SelectionLength = txtExpect.Text.Length;  //makes it so that when you start typing it will highlight the text currently in the text box and then remove it
            }
        }


        bool txtSolutionsWasFocused = false;
        private void txtSolutions_Focus(object sender, EventArgs e)
        {
            if (!txtSolutionsWasFocused)
            {
                txtSolutionsWasFocused = true;
                txtSolutions.SelectionStart = 0;
                txtSolutions.SelectionLength = txtSolutions.Text.Length; //makes it so that when you start typing it will highlight the text currently in the text box and then remove it
            }
        }

       



        //button opens form that will allow them to remove an active error that is currently contained within the errors table



    }
}

    
